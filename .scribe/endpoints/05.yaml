name: Users
description: 'Class UserController'
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/users
    metadata:
      title: 'List All Users'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      Access-Control-Allow-Origin: '*'
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{id}/details'
    metadata:
      title: 'Display User Details'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      Access-Control-Allow-Origin: '*'
    urlParameters:
      id:
        name: id
        description: 'User ID'
        required: true
        example: 10
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/v1/users/create
    metadata:
      title: 'Create New User'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      Access-Control-Allow-Origin: '*'
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The User Name'
        required: true
        example: autem
        type: string
      email:
        name: email
        description: 'User Email'
        required: true
        example: aut
        type: email
      password:
        name: password
        description: 'User Password'
        required: true
        example: voluptate
        type: password
      password_confirmation:
        name: password_confirmation
        description: 'Password Confirmation'
        required: true
        example: consequatur
        type: password
    responses: []
    responseFields: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/users/{id}/update'
    metadata:
      title: 'Update User Details'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      Access-Control-Allow-Origin: '*'
    urlParameters:
      id:
        name: id
        description: 'The User ID.'
        required: true
        example: 19
        type: integer
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the user'
        required: true
        example: perspiciatis
        type: string
      email:
        name: email
        description: 'The email of the user'
        required: true
        example: sit
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/users/{id}/delete'
    metadata:
      title: 'Delete User'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      Access-Control-Allow-Origin: '*'
    urlParameters:
      id:
        name: id
        description: 'The ID of the User'
        required: true
        example: 12
        type: integer
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/users/status/{id}/admin'
    metadata:
      title: 'Change Admin Status'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      Access-Control-Allow-Origin: '*'
    urlParameters:
      id:
        name: id
        description: 'The User ID'
        required: true
        example: 13
        type: integer
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{id}/roles'
    metadata:
      title: 'List User Specific Roles'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      Access-Control-Allow-Origin: '*'
    urlParameters:
      id:
        name: id
        description: 'The User ID'
        required: false
        example: 12
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/users/{id}/assign-roles'
    metadata:
      title: 'Assign Role|Multiple Roles'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      Access-Control-Allow-Origin: '*'
    urlParameters:
      id:
        name: id
        description: 'the User ID to be assigned roles'
        required: true
        example: 12
        type: integer
    queryParameters: []
    bodyParameters:
      role_id:
        name: role_id
        description: 'The Role ID'
        required: false
        example: et
        type: required
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/users/{id}/revoke-roles'
    metadata:
      title: 'Revoke Role|Roles from a user'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      Access-Control-Allow-Origin: '*'
    urlParameters:
      id:
        name: id
        description: 'User ID'
        required: true
        example: 17
        type: integer
    queryParameters: []
    bodyParameters:
      role_id:
        name: role_id
        description: 'The role(s) to be revoked(for many roles, use comma separated IDs)'
        required: false
        example: consequatur
        type: required
    responses: []
    responseFields: []
